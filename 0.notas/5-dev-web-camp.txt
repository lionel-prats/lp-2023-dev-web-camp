VIDEO 671

npm install o npm i 
- Se instala node_modules con todas las dependencias del package.json

composer install
- Se instala /vendor con las dependencias del composer.json

npm run dev 
- para que se compile el css, el js y las imagenes (se genera la carpeta /public/build con todo su contenido) 

-----

VIDEO 673 

@mixin contenedor-sm {
    width: min(95%, 60rem); // defino el width y el max-width en una misma linea
    * existe max()
    * existe clamp()
}

----- 

VIDEO 674 

https://developer.mozilla.org/es/docs/Web/CSS/Attribute_selectors

slector de atributo SASS
todos los elementos con clase terminada en "__heading" -> class="xxx__heading"

[class$="__heading"] {
    @include m.nombre-pagina;
}

^= -> que comienze en ...
&= -> que termine con ...  
*= -> que contenga ...

----- 

VIDEO 688 

Convertir un array asociativo en un objeto utilizando el tipo de dato "stdClass" que representa un objeto vacío genérico vvv

$array = [
    "nombre" => "Lionel",
    "edad" => 37,
];

$objeto = (object)$array;

echo "<pre>";
print_r($array);
print_r($objeto);
echo $array["nombre"] . "<br>";
echo $objeto->edad;
exit;

----- 

VIDEO 689 

CONFIGURACION DE MAILTRAP (server de mails para testing) vvv

1. Borré el Inbox creado anteriormente (esa especie de casilla de correo a donde llegan los mails cada vez que, por ejemplo, registro un nuevo usuario) ya que la cuenta gratis de Mailtrap permite tener solo 1 Inbox.

2. Creé un Inbox nuevo llamado "DevWebCamp"

3. Click sobre el nombre del Inbox para cambiar la integración.

4. Cambio la integración a PHPMailer

5. Mailtrap me da estas credenciales para configurar PHPMailer en mi proyecto vvv 

"Use the following setting to configure PHPMailer":
$phpmailer = new PHPMailer();
$phpmailer->isSMTP();
$phpmailer->Host = 'sandbox.smtp.mailtrap.io';
$phpmailer->SMTPAuth = true;
$phpmailer->Port = 2525;
$phpmailer->Username = '29b1ed5b72f7bf';
$phpmailer->Password = '********f3db';

6. Hay que darle click a "Show Credentials" para que se muestre el password y se pueda realizar la configuración correctamente vvv 

SMTP
Host:
sandbox.smtp.mailtrap.io
Port:
25 or 465 or 587 or 2525
Username:
29b1ed5b72f7bf
Password:
fe9bdf60a5f3db
Auth:
PLAIN, LOGIN and CRAM-MD5
TLS:
Optional (STARTTLS on all ports)

7. Seteo las variables de configuracitn en el .env vvv

EMAIL_HOST=sandbox.smtp.mailtrap.io
EMAIL_PORT=2525
EMAIL_USER=29b1ed5b72f7bf
EMAIL_PASS=fe9bdf60a5f3db

8. Como hice cambios, el profesor recomienda detener el servidor local y volver a levantarlo

----- 

VIDEO 693 

REPASO DE router.php 

* por cada "endpoint" que defino en el router (index.php), en verdad estoy ejecutando las funciones get() y post() de la clase Router, definida en Router.php, que van completando los atributos de la misma clase $getRoutes y $postRoutes, que son arrays asociativos donde la clave es cada ruta definida, y el valor es un array de 2 strings: el 1ero. es la clase (controlador) que se tiene que ejecutar y el segundo es el metodo de ese controlador que se tiene que ejecutar vvv

public array $getRoutes = array(6) {
  ["/login"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(5) "login"
  }
  ["/registro"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(8) "registro"
  }
  ["/olvide"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(6) "olvide"
  }
  ["/reestablecer"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(12) "reestablecer"
  }
  ["/mensaje"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(7) "mensaje"
  }
  ["/confirmar-cuenta"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(9) "confirmar"
  }
}

public array $postRoutes = array(5) {
  ["/login"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(5) "login"
  }
  ["/logout"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(6) "logout"
  }
  ["/registro"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(8) "registro"
  }
  ["/olvide"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(6) "olvide"
  }
  ["/reestablecer"]=>
  array(2) {
    [0]=>
    string(26) "Controllers\AuthController"
    [1]=>
    string(12) "reestablecer"
  }
}

* Luego, en index.php, vemos que se ejecuta el metodo $router->comprobarRutas();
* La revisión sigue con comentarios en Router.php, repasando el VIDEO 401 y 402

* COMPRENSION DEFINITIVA DE COMO EL ARRAY QUE PASAMOS A LA VISTA DESDE EL CONTROLADOR LO PODEMOS ACCEDER EN LA VISTA COMO VARIABLES INDIVIDUALES vvv

$view_data = [
    "nombre" => "Lionel",
    "apellido" => "Prats",
    "edad" => 37
];
foreach ($view_data as $key => $value) {
    $$key = $value;
}
echo $nombre . "<br>";
echo $apellido . "<br>";
echo $edad . "<br>";

exit;

----- 

* funcion PHP (a partir de version 8) para buscar un substring dentro de un string
* lo utilizamos en Router->render() para switchear entre las vistas del dashboard de administrador y el resto de las vistas de la app 
* retorna un bool vvv

str_contains($url_actual, "/admin") 

----- 

VIDEO 704

tags.js -> JAVASCRIPT 

e.keyCode -> propiedad del evenvto JS que retorna un codigo numerico de una tecla presionada. Con el evento "keypress" funciona bien, ya que si imprimo por consola cada evento, se imprime el keyCode de la tecla presionada en tiempo real

tagsInputs.addEventListener("keypress", guardarTag)
function guardarTag(e) {
    console.log(e.keyCode);
}

----- 

VIDEO 706

CSS vvv 

De una manera muy simple deja fijo el Header superior (similar a position: sticky)

-----

VIDEO 708

superglobal $_FILE -> array global nativo de PHP, como $_SERVER, $_SESSION, etc.
$_FILE es para enviar archivos al servidor.

- Ejemplo 1: submiteo un formulario al server con 2 inputs type="file" con los names "name_1_del_input_file" y "name_2_del_input_file" respectivamente...
En este primer caso mando ambos inputs vacíos. Debugueo $_FILEen el controlador que recibe la petición. El debug vvv

Array
(
    [name_1_del_input_file] => Array
        (
            [name] => 
            [full_path] => 
            [type] => 
            [tmp_name] => 
            [error] => 4
            [size] => 0
        )
    [name_2_del_input_file] => Array
        (
            [name] => 
            [full_path] => 
            [type] => 
            [tmp_name] => 
            [error] => 4
            [size] => 0
        )
)

- Ejemplo 2: submiteo un formulario al server con 2 inputs type="file" con los names "name_1_del_input_file" y "name_2_del_input_file" respectivamente...
En este segundo caso mando mando un .png en el primer input y un .txt en el segundo. Debugueo $_FILE en el controlador que recibe la petición. El debug vvv

Array
(
    [name_1_del_input_file] => Array
        (
            [name] => speaker_13.png
            [full_path] => speaker_13.png
            [type] => image/png
            [tmp_name] => C:\xampp\tmp\php1E83.tmp
            [error] => 0
            [size] => 359928
        )
    [name_2_del_input_file] => Array
        (
            [name] => entrevista.txt
            [full_path] => entrevista.txt
            [type] => text/plain
            [tmp_name] => C:\xampp\tmp\php1E84.tmp
            [error] => 0
            [size] => 5710
        )
)

----- 

el formato .png permite imagenes con fondo transparente

* debugueo de $_FILES cuando le mandamos una imagen desde el <intput name="imagen"> vvv 
array(1) {
  ["imagen"]=>
  array(6) {
    ["name"]=>
    string(14) "speaker_16.png"
    ["full_path"]=>
    string(14) "speaker_16.png"
    ["type"]=>
    string(9) "image/png"
    ["tmp_name"]=>
    string(24) "C:\xampp\tmp\phpE3C0.tmp"
    ["error"]=>
    int(0)
    ["size"]=>
    int(383347)
  }
}

----- 

VIDEO 735 

JavaScript vvv 

// IIFE -> Inmediately Invoke Function Expression vvv
(function() {
})()

*** En JavaScript, es importante finalizar el bloque de un IIFE con ";" para que no rompa la compilación en un archivo común (/public/build/js/bundle.min.js)

----- 

VIDEO 741

cursor: not-allowed; // Propiedad CSS para que queda muy bien con un :hover sobre un elemento HTML factible de ser clickeado/seleccionado (enlaces, botones, inputs, etc.) para indicarle al usuario que no puede ser seleccionado (cuando sea que lo requiramos)

----- 

JavaScript

A partir de un objeto, forma de construir un array de las claves y de los valores del mismo vvv

let busqueda = { 
  categoria_id: "5",
  dia: "Pepe"
}
console.log(Object.keys(busqueda)); // ['categoria_id', 'dia']
console.log(Object.values(busqueda)); // ['5', 'Pepe']

----- 

VIDEO 742

JavaScript -> forma de "convertir" un NodeList en un Array(0)

En este ejemplo capturo una serie de <li> (NodeList) en la variable listadoHoras.
Luego almacento en la variable listadoHorasArray la "conversión" a array de este NodeList.
Esto me va a permitir utilizar métodos de array (.map, .filter, etc.) para operar el NodeList vvv

const listadoHoras = document.querySelectorAll("#horas li")
const listadoHorasArray = Array.from(listadoHoras);

*** Si hacemos un console.log() de ambas variables, podemos ver en la consola que en listadoHoras -> [[Prototype]]: NodeList mientras que en listadoHorasArray -> [[Prototype]]: Array(0)

----- 

VIDEO 745 

JavaScript - Evento Input (ponentes.js)

El evento input se dispara cuando escribo en un campo o copio y pego o elimino, etc. Todo esto va a estar disparando este evento vvv 

ponentesInput.addEventListener("input", buscarPonentes);

*** hice pruebas y es cierto: a diferencia por ejemplo del evento keypress (que lo usamos para el form creacion y edicion de ponentes), el evento input se dispara con algunas acciones que con el anterior no: pegar algo en el input, cortar algo que seleccionamos en el input, copiar algo que seleccionamos en el input, deshacer un cambio con Ctrl+z, etc

----- 

Expresiones regulares en JavaScript

"Una expresión regular es una forma de buscar un patrón en un valor"

Ejemplo práctico de como usar una expresión regular para un buscador vvv 

let nombre = "lionel";

let stringBuscado = "ONe";

let expresion = new RegExp(stringBuscado, "i"); // creo una expresión regular (RegExp) utilizando el valor de stringBuscado. El modificador "i" se utiliza para que la expresión regular sea insensible a mayúsculas y minúsculas, lo que significa que buscará el subtring "ONe" en donde le indiquemos sin importar si las letras están en mayúsculas o minúsculas.

console.log(nombre.search(stringBuscado)); // imprime -1, ya que "ONe" (stringBuscado) no se encuentra en la variable nombre (no coinciden las mayúsculas/minúsculas)

console.log(nombre.search(expresion)); // imprime 2, ya que esta vez buscamos usando la expresión regular que creamos anteriormente (que nos va a servir para buscar "ONe" en cualquier string, siendo insensible a mayusculas/minusculas; si se encuentra la secuencia de caracteres, el array method search() va a retornar la posición donde se ubica el primer caracter del substring en el string, en este ejemplo "ONe" empieza en la posición 2 de "Lionel")

----- 

VIDEO 746 

JavaScript -> Alternativa más performante para borrar el .innerHTML de un elemento en el DOM vvv

// listadoPonentes.innerHTML = "";

while(listadoPonentes.firstChild) {
    listadoPonentes.removeChild(listadoPonentes.firstChild);
    // listadoTareas.firstChild.remove();
}